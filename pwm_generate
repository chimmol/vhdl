library ieee; 
use ieee.std_logic_1164.all ; 
use ieee.std_logic_unsigned.all ; 

entity pwm_generate is 
	port (
		clk 				: in std_logic ; 		-- 50Mhz
		duty_counter 	: in std_logic_vector ( 7 downto 0 ) ; 
		m_out 			: out std_logic 
	);
end entity ; 

architecture sam of pwm_generate is
signal pwm_clk : std_logic ;    -- 5khz
signal div_counter : integer range 0 to 5000 ; 

signal period_counter: std_logic_vector ( 7 downto 0 ); 

begin 

pwm_clk_gen : process ( clk )
begin
	if clk'event and clk = '1' then 
		if div_counter = 4999 then 
			div_counter <= 0 ; 
			pwm_clk <= not pwm_clk ; 
		else 			
			div_counter <= div_counter + 1 ; 
		end if; 
	end if; 
end process ; 

period_cnt : process ( pwm_clk )
begin 
	if pwm_clk'event and pwm_clk ='1' then 
		if period_counter = x"ff" then 
			period_counter <= x"00" ;
		else 		
			period_counter <= period_counter + '1' ; 
		end if; 
	end if; 
end process ; 


pwm_out : process ( pwm_clk, period_counter, duty_counter) 
begin 
	if pwm_clk'event and pwm_clk = '1' then 
		if duty_counter>= period_counter then 
			m_out <= '1' ; 
		else 
			m_out <= '0' ; 
		end if; 
	end if; 
end process ; 


end sam; 
	
